@using BlazorServerAppBanco.ModelsDTO;
@using BlazorServerAppBanco.Services;

@page "/secUsers"
@inject ILogger<SecUserDTO> logger;
@inject ISecUserService secUserService;
@inject NavigationManager navigationManager;
@inject IJSRuntime JSRuntime;


<PageTitle>SecUsers</PageTitle>
<h3>SecUsers</h3>

<h1>Users</h1>

@* <button class="btn btn-primary" @onclick="GoToAddProducts">Go to addProducts</button>
<button title="Update" class="btn btn-info" @onclick="MostrarAlerta"><span class="oi btn-outline-info"></span></button>
 *@
@if (!secUsers.Any() || secUsers.Count() > 0)
{
    <div class="products-container">
        @foreach (var user in secUsers)
        {
            //logger.LogInformation($"log: {product.images[0].Trim('[', ']')}");
            <div class="card">
                @* <img class="card-img-top" src="@user.images[0]" alt="user" loading="lazy" width="270" height="210"> *@

                <div class="card-body">
                    <h4><b>@user.Name</b></h4>
                    <p>@user.Email</p>
@*                     <button title="Delete" class="btn btn-danger btn-delete" @onclick="@(() => deleteusers(user))"><span class="oi oi-trash"></span></button>
                    <button title="Update" class="btn btn-info" @onclick="@(() => GoToUpdateusers(user.id))"><span class="oi btn-outline-info"></span></button> *@
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No existen usuarios</p>
}

@code {
    private List<SecUserDTO> secUsers;

    protected override async Task OnInitializedAsync()
    {
        await Get();
    }

    public async Task Get()
    {
        secUsers = await secUserService.GetAll();
    }
}
